{"ast":null,"code":"import { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { auth } from '../firebaseConfig';\nconst SignIn = () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider).then(result => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.customData.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n};\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["GoogleAuthProvider","signInWithPopup","auth","SignIn","provider","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError"],"sources":["/home/cedcoss/mark01/A-React Work/01_firstReactApp/81_chatServer/chat-server/src/Auth/SignIn.tsx"],"sourcesContent":["import React from 'react'\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { auth } from '../firebaseConfig';\nconst SignIn = () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.customData.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n}\n\nexport default SignIn"],"mappings":"AACA,SAASA,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AACnE,SAASC,IAAI,QAAQ,mBAAmB;AACxC,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAMC,QAAQ,GAAG,IAAIJ,kBAAkB,EAAE;EACzC,OAAOC,eAAe,CAACC,IAAI,EAAEE,QAAQ,CAAC,CACrCC,IAAI,CAAEC,MAAM,IAAK;IAChB;IACA,MAAMC,UAAU,GAAGP,kBAAkB,CAACQ,oBAAoB,CAACF,MAAM,CAAC;IAClE,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAW;IACpC;IACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAI;IACxB;EACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAClB;IACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;IAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;IAClC;IACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,UAAU,CAACD,KAAK;IACpC;IACA,MAAMX,UAAU,GAAGP,kBAAkB,CAACoB,mBAAmB,CAACP,KAAK,CAAC;IAChE;EACF,CAAC,CAAC;AAEJ,CAAC;AAAA,KArBKV,MAAM;AAuBZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}